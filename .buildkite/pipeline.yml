steps:
  - label: "sonarqube code check"
    command:
      - sonar.sh
    agents:
        queue: $BUILDKITE_AGENT_META_DATA_QUEUE
  
  - wait      
  - label: "npm unit test"
    command:
      - cd app
      - npm install
      - npm test
    agents:
        queue: $BUILDKITE_AGENT_META_DATA_QUEUE

  - label: "npm functional tests"
    command:
      - cd app
      - npm install
      - npm test
    agents:
        queue: $BUILDKITE_AGENT_META_DATA_QUEUE

  - wait
  - label: "npm build"
    command:
      - cd app
      - npm install
      - npm build
    agents:
        queue: $BUILDKITE_AGENT_META_DATA_QUEUE      

  - wait      
  - label: "create artifact"
    command:
      - echo $BUILDKITE_BUILD_NUMBER
      - docker build -t \$ECR:\$BUILDKITE_BUILD_NUMBER -f Dockerfile . --build-arg sha="$(git rev-parse --short HEAD)" --build-arg  version=\$BUILDKITE_BUILD_NUMBER
      - $(aws ecr get-login --no-include-email --region us-east-2)
      - docker tag \$ECR:\$BUILDKITE_BUILD_NUMBER \$ECR:latest
      - docker push \$ECR:\$BUILDKITE_BUILD_NUMBER
      - docker push \$ECR:latest
    agents:
        queue: $BUILDKITE_AGENT_META_DATA_QUEUE
    env:
      ECR: 378736163542.dkr.ecr.us-east-2.amazonaws.com/technical-test2

  - wait
  - label: deploy build dev
    command:
      - .buildkite/k8s.sh
    agents:
      queue: $BUILDKITE_AGENT_META_DATA_QUEUE
    env:
      CLUSTER_NAME: technical-test2
      ECR: 378736163542.dkr.ecr.us-east-2.amazonaws.com/technical-test2
      ENV: dev

  - block: ":shipit: Release"
    branches: "*"

  - wait
  - label: Release to prod
    command:
      - .buildkite/k8s.sh
    agents:
      queue: $BUILDKITE_AGENT_META_DATA_QUEUE
    env:
      CLUSTER_NAME: technical-test2
      ECR: 378736163542.dkr.ecr.us-east-2.amazonaws.com/technical-test2
      ENV: prod